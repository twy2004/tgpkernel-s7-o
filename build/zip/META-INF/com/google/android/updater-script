# --------------------------
# TGPKERNEL INSTALLER 4.10.2
# Created by @djb77
# --------------------------

set_progress(0.0);

# BACKUP CONFIG
# -------------
if file_getprop("/tmp/aroma/tgpkernel-backup.prop","install") == "1" then
	ui_print("Backing up Config");
	run_program("/tmp/aroma/tgpkernel.sh", "config_backup");
	ui_print(" ");
endif;

# RESTORE CONFIG
# --------------
if file_getprop("/tmp/aroma/tgpkernel-restore.prop","install") == "1" then
	ui_print("Restoring Config");
	run_program("/tmp/aroma/tgpkernel.sh", "config_restore");
	ui_print(" ");
endif;

set_progress(0.10);

# WIPE MAGISK / SUPERSU
# ---------------------
if file_getprop("/tmp/aroma/wipe.prop","install") == "1" then
	ui_print("Clearing old Magisk / SuperSU Installs");
	ui_print("- Wiping Magisk");
	if is_mounted("/data") == "/data" then
		assert(run_program("/sbin/busybox", "umount", "/data"));
	endif;
	if is_mounted("/cache") == "/cache" then
		assert(run_program("/sbin/busybox", "umount", "/cache"));
	endif;
	package_extract_dir("tgpkernel/magisk-uninstaller", "/tmp/magisk-uninstaller");
	run_program("/sbin/busybox", "unzip", "/tmp/magisk-uninstaller/magisk-uninstaller.zip", "META-INF/com/google/android/*", "-d", "/tmp/magisk-uninstaller");
	run_program("/sbin/sh", "/tmp/magisk-uninstaller/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/magisk-uninstaller/magisk-uninstaller.zip");
	delete_recursive("/tmp/magisk-uninstaller");
	ui_print("- Wiping SuperSU");
	if is_mounted("/data") == "/data" then
		assert(run_program("/sbin/busybox", "umount", "/data"));
	endif;
	if is_mounted("/cache") == "/cache" then
		assert(run_program("/sbin/busybox", "umount", "/cache"));
	endif;
	package_extract_dir("tgpkernel/unsu", "/tmp/unsu");
	run_program("/sbin/busybox", "unzip", "/tmp/unsu/unsu.zip", "META-INF/com/google/android/*", "-d", "/tmp/unsu");
	run_program("/sbin/sh", "/tmp/unsu/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/unsu/unsu.zip");
	delete_recursive("/tmp/unsu");
	ui_print(" ");
endif;

set_progress(0.20);
ui_print("Setting up");

# UNPACK FILES
# ------------
ui_print("- Unpacking Files");
package_extract_dir("tgpkernel/files", "/tmp/tgptemp");
run_program("/tmp/aroma/tgpkernel.sh", "setup_extract");

set_progress(0.30);

# MOUNT PARTITIONS
# ----------------
ui_print("- Mounting Partitions");
if is_mounted("/system") == "/system" then
	assert(run_program("/sbin/busybox", "umount", "/system"));
endif;
if is_mounted("/data") == "/data" then
	assert(run_program("/sbin/busybox", "umount", "/data"));
endif;
run_program("/sbin/mount", "/system");
run_program("/sbin/mount", "/data");
if file_getprop("/tmp/aroma/wipe.prop","install") == "1" then
run_program("/tmp/aroma/tgpkernel.sh", "wipe_magisk_su");
endif;

set_progress(0.35);

# CHECK ROM
# ---------
run_program("/tmp/aroma/tgpkernel.sh", "rom_check");
if file_getprop("/tmp/aroma/check_s7.prop","install") == "1" then
	ui_print("- Checking for ROM Type, S7 Found");
endif;
if file_getprop("/tmp/aroma/check_n8port.prop","install") == "1" then
	ui_print("- Checking for ROM Type, N8 Oreo Port Found");
endif;
if file_getprop("/tmp/aroma/check_s9port.prop","install") == "1" then
	ui_print("- Checking for ROM Type, S9 Port Found");
endif;
if file_getprop("/tmp/aroma/deodexed.prop","install") == "1" then
	ui_print("- Checking for ROM Type, Deodexed ROM Found");
endif;

set_progress(0.40);
ui_print(" ");

# FLASH KERNEL
# ------------
if file_getprop("/tmp/aroma/g930x.prop","install") == "1" then
	if file_getprop("/tmp/aroma/check_s7.prop","install") == "1" then
		ui_print("Flashing TGPKernel for S7");
	endif;
	if file_getprop("/tmp/aroma/check_s9port.prop","install") == "1" then
		ui_print("Flashing TGPKernel for S7 (S9 Port)");
	endif;
	if file_getprop("/tmp/aroma/check_n8port.prop","install") == "1" then
		ui_print("Flashing TGPKernel for S7 (N8 Port)");
	endif;
endif;
if file_getprop("/tmp/aroma/g935x.prop","install") == "1" then
	if file_getprop("/tmp/aroma/check_s7.prop","install") == "1" then
		ui_print("Flashing TGPKernel for S7 Edge");
	endif;
	if file_getprop("/tmp/aroma/check_s9port.prop","install") == "1" then
		ui_print("Flashing TGPKernel for S7 Edge (S9 Port)");
	endif;
	if file_getprop("/tmp/aroma/check_n8port.prop","install") == "1" then
		ui_print("Flashing TGPKernel for S7 Edge (N8 Port)");
	endif;
endif;
run_program("/tmp/aroma/tgpkernel.sh", "kernel_flash");

set_progress(0.45);
ui_print(" ");

# INSTALL SYSTEM PATCHES
# ----------------------
ui_print("Patching System");
run_program("/tmp/aroma/tgpkernel.sh", "system_patch");
delete_recursive("/tmp/tgptemp");

set_progress(0.50);

# SPLASH SCREENS
# --------------
if file_getprop("/tmp/aroma/splash.prop","install") == "1" then
	if file_getprop("/tmp/aroma/g930x.prop","install") == "1" then
		ui_print("Flashing Stock Splash Screen for S7");
		package_extract_dir("tgpkernel/splash/s7-stock", "/tmp/splash");
		run_program("/tmp/aroma/tgpkernel.sh", "splash_flash");
	endif;
	if file_getprop("/tmp/aroma/g935x.prop","install") == "1" then
		ui_print("Flashing Stock Splash Screen for S7 Edge");
		package_extract_dir("tgpkernel/splash/s7e-stock", "/tmp/splash");
		run_program("/tmp/aroma/tgpkernel.sh", "splash_flash");		
	endif;
endif;

if file_getprop("/tmp/aroma/splash.prop","install") == "2" then
	if file_getprop("/tmp/aroma/g930x.prop","install") == "1" then
		if file_getprop("/tmp/aroma/check_s7.prop","install") == "1" then
			ui_print("@Installing Custom Splash Screen for S7");
			package_extract_dir("tgpkernel/splash/s7", "/tmp/splash");
			run_program("/tmp/aroma/tgpkernel.sh", "splash_flash");	
		endif;
		if file_getprop("/tmp/aroma/check_s9port.prop","install") == "1" then
			ui_print("@Installing Custom Splash Screen for S9 Port");
			package_extract_dir("tgpkernel/splash/s9", "/tmp/splash");
			run_program("/tmp/aroma/tgpkernel.sh", "splash_flash");		
		endif;
		if file_getprop("/tmp/aroma/check_n8port.prop","install") == "1" then
			ui_print("@Installing Custom Splash Screen for Note 8 Port");
			package_extract_dir("tgpkernel/splash/n8", "/tmp/splash");
			run_program("/tmp/aroma/tgpkernel.sh", "splash_flash");		
		endif;
	endif;
	if file_getprop("/tmp/aroma/g935x.prop","install") == "1" then
		if file_getprop("/tmp/aroma/check_s7.prop","install") == "1" then
			ui_print("@Installing Custom Splash Screen for S7 Edge");
			package_extract_dir("tgpkernel/splash/s7e", "/tmp/splash");
			run_program("/tmp/aroma/tgpkernel.sh", "splash_flash");
		endif;
		if file_getprop("/tmp/aroma/check_s9port.prop","install") == "1" then
			ui_print("@Installing Custom Splash Screen for S9 Port");
			package_extract_dir("tgpkernel/splash/s9+", "/tmp/splash");
			run_program("/tmp/aroma/tgpkernel.sh", "splash_flash");	
		endif;
		if file_getprop("/tmp/aroma/check_n8port.prop","install") == "1" then
			ui_print("@Installing Custom Splash Screen for Note 8 Port");
			package_extract_dir("tgpkernel/splash/n8e", "/tmp/splash");
			run_program("/tmp/aroma/tgpkernel.sh", "splash_flash");	
		endif;
	endif;
endif;

set_progress(0.52);

# INSTALL MTWEAKS
# ---------------
if file_getprop("/tmp/aroma/mtweaks.prop","install") == "1" then
	ui_print("Installing MTweaks App");
	delete_recursive("/system/app/com.moro.mtweaks*");
	delete_recursive("/system/priv-app/com.moro.mtweaks*");
	delete_recursive("/data/app/com.moro.mtweaks*");
	delete_recursive("/data/data/com.moro.mtweaks*");
	package_extract_dir("tgpkernel/apps/com.moro.mtweaks-1", "/data/app/com.moro.mtweaks-1");
endif;

set_progress(0.54);

# INSTALL WIREGUARD
# -----------------
if file_getprop("/tmp/aroma/wireguard.prop","install") == "1" then
	ui_print("Installing WireGuard Control App");
	delete_recursive("/data/app/com.wireguard.android*");
	delete_recursive("/data/data/com.wireguard.android*");
	package_extract_dir("tgpkernel/apps/com.wireguard.android-1", "/data/app/com.wireguard.android-1");
endif;

set_progress(0.57);

# INSTALL SPECTRUM APP
# --------------------
if file_getprop("/tmp/aroma/spectrum.prop","install") == "1" then
	ui_print("Installing Spectrum Control App");
	delete("/data/property/persist.spectrum.profile");
	delete_recursive("/data/app/org.frap129.spectrum*");
	delete_recursive("/data/data/org.frap129.spectrum*");
	package_extract_dir("tgpkernel/apps/org.frap129.spectrum-1", "/data/app/org.frap129.spectrum-1");
endif;

set_progress(0.60);

# INSTALL BUSYBOX
# ---------------
if file_getprop("/tmp/aroma/busybox.prop","install") == "1" then
	ui_print("Installing Busybox");
	run_program("/tmp/aroma/tgpkernel.sh", "busybox");
endif;

set_progress(0.62);

# INSTALL ADB
# -----------
if file_getprop("/tmp/aroma/adb.prop","install") == "1" then
	ui_print("Installing ADB");
	run_program("/tmp/aroma/tgpkernel.sh", "adb");
endif;

set_progress(0.65);

# PERMISSIONS
# -----------
ui_print(" ");
ui_print("Setting System Permissions");
set_metadata("/system/bin/logd", "uid", 1036, "gid", 1036, "mode", 0550, "capabilities", 0x440000040, "selabel", "u:object_r:logd_exec:s0");
set_metadata_recursive("/system/etc/init.d", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/libsecure_storage.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/egl/libGLES_mali.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib64/libsecure_storage.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib64/egl/libGLES_mali.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/xbin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");

set_progress(0.70);
ui_print(" ");

# RAMDISK PATCHES
# ---------------
if file_getprop("/tmp/aroma/anykernel.prop","install") == "1" then
	ui_print("Patching Ramdisk");
	package_extract_dir("tgpkernel/anykernel2", "/tmp/ak2");
	run_program("/sbin/busybox", "unzip", "/tmp/ak2/anykernel2.zip", "META-INF/com/google/android/*", "-d", "/tmp/ak2");
	run_program("/sbin/sh", "/tmp/ak2/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/ak2/anykernel2.zip");
	delete_recursive("/tmp/ak2");
	delete_recursive("/tmp/anykernel*");
	ui_print(" ");
endif;

set_progress(0.75);

# INSTALL SUPERSU
# ---------------
if file_getprop("/tmp/aroma/supersu.prop","install") == "1" then
	ui_print("Installing SuperSU");
	package_extract_dir("tgpkernel/supersu", "/tmp/supersu");
	package_extract_dir("tgpkernel/suhide", "/data/media/0");
	run_program("/tmp/aroma/tgpkernel.sh", "supersu");
	run_program("/sbin/busybox", "unzip", "/tmp/supersu/supersu.zip", "META-INF/com/google/android/*", "-d", "/tmp/supersu");
	run_program("/sbin/sh", "/tmp/supersu/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/supersu/supersu.zip");
	delete_recursive("/tmp/supersu");
	ui_print(" ");
endif;

set_progress(0.85);

# INSTALL MAGISK
# --------------
if file_getprop("/tmp/aroma/magisk.prop","install") == "1" then
	ui_print("Installing Magisk");
	package_extract_dir("tgpkernel/magisk", "/tmp/magisk");
	run_program("/sbin/busybox", "unzip", "/tmp/magisk/magisk.zip", "META-INF/com/google/android/*", "-d", "/tmp/magisk");
	run_program("/sbin/sh", "/tmp/magisk/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/magisk/magisk.zip");
	delete_recursive("/tmp/magisk");
	ui_print(" ");
endif;

set_progress(0.95);

# FINISH
# ------
ui_print("Unmounting Partitions");
if is_mounted("/system") == "/system" then
	assert(run_program("/sbin/busybox", "umount", "/system"));
endif;
if is_mounted("/system") == "/cache" then
	assert(run_program("/sbin/busybox", "umount", "/cache"));
endif;
if is_mounted("/data") == "/data" then
	assert(run_program("/sbin/busybox", "umount", "/data"));
endif;

ui_print(" ");
ui_print("Installation Complete");
ui_print(" ");

set_progress(1);

